from discord.ext import commands, tasks
from discord.ui import Select, View
import discord
from config import settings
import sqlite3
import time
from discord import app_commands
import typing
import requests

data = sqlite3.connect('data.sqlite')#connect to BD
cur = data.cursor()

class Information(commands.Cog):
    """information module"""
    def __init__(self, bot):
        self.bot = bot
        self.user_info = app_commands.ContextMenu(
            name='–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —ñ—Ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é',
            callback=self.user_info_callback
        )
        self.bot.tree.add_command(self.user_info)    
        
    
    @commands.Cog.listener()
    async def on_ready(self):
        print('Information commands - Ready!')
        global start_time
        start_time = int(time.time())
    
    @app_commands.command(name='help', description='–ö–æ–º–∞–Ω–¥–∞ –¥–æ–≤—ñ–¥–∫–∞')
    async def help(self, interaction: discord.Interaction, command: str = None):
        if command == None:
            menu = Select(
                placeholder='–í–∏–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é...',
                options=[
                    discord.SelectOption(
                        label='–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è',
                        value='1',
                        emoji='üìÉ'
                    ),
                    discord.SelectOption(
                        label='–ï–∫–æ–Ω–æ–º—ñ–∫–∞',
                        value='2',
                        emoji='üí∞'
                    )
                ]
            )
            
            async def callback(interaction:discord.Integration):
                if menu.values[0] == '1':
                    embed = discord.Embed(
                        title='–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó üìÉ–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è',
                        description=f'–í–∏ –º–æ–∂–µ—Ç–µ –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –¥–ª—è –∫–æ–∂–Ω–æ—ó –∫–æ–º–∞–Ω–¥–∏, –≤–∏–∫–ª–∏–∫–∞–≤—à–∏ —ó—ó –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é {settings["prefix"]}help `<–Ω–∞–∑–≤–∞ –∫–æ–º–∞–Ω–¥–∏>`',
                        color=settings['color']
                    )
                    embed.set_thumbnail(
                        url=settings['avatar']
                    )
                    embed.set_footer(
                        text='Mops Storage ¬© 2020-2022 –í—Å—ñ –ø—Ä–∞–≤–∞ –∑–∞—Ö–∏—â–µ–Ω–æ ‚Ä¢ https://mops-storage.xyz',
                        icon_url=settings['avatar']
                    )
                    embed.add_field(
                        name=f'{settings["prefix"]}help',
                        value='–ü–µ—Ä–µ–ª—ñ–∫ –≤—Å—ñ—Ö –∫–æ–º–∞–Ω–¥ —Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π',
                        inline=False
                    )
                    embed.add_field(
                        name=f'{settings["prefix"]}info',
                        value=f'–ö–æ—Ä–∏—Å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ {settings["name"]}',
                        inline=False
                    )
                    embed.add_field(
                        name=f'{settings["prefix"]}stats',
                        value=f'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è {settings["name"]}',
                        inline=False
                    )
                    embed.add_field(
                        name=f'{settings["prefix"]}server',
                        value='–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ—Ç–æ—á–Ω–∏–π —Å–µ—Ä–≤–µ—Ä',
                        inline=False
                    )
                    embed.add_field(
                        name=f'{settings["prefix"]}user',
                        value='–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —É—á–∞—Å–Ω–∏–∫–∞',
                        inline=False
                    )
                    await interaction.response.send_message(embed=embed, ephemeral=True)
                    
                if menu.values[0] == '2':
                    embed = discord.Embed(
                        title='–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó üí∞–ï–∫–æ–Ω–æ–º—ñ–∫–∞',
                        description=f'–í–∏ –º–æ–∂–µ—Ç–µ –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –¥–ª—è –∫–æ–∂–Ω–æ—ó –∫–æ–º–∞–Ω–¥–∏, –≤–∏–∫–ª–∏–∫–∞–≤—à–∏ —ó—ó –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é {settings["prefix"]}help `<–Ω–∞–∑–≤–∞ –∫–æ–º–∞–Ω–¥–∏>`',
                        color=settings['color']
                    )
                    embed.set_thumbnail(
                        url=settings['avatar']
                    )
                    embed.set_footer(
                        text='Mops Storage ¬© 2020-2022 –í—Å—ñ –ø—Ä–∞–≤–∞ –∑–∞—Ö–∏—â–µ–Ω–æ ‚Ä¢ https://mops-storage.xyz',
                        icon_url=settings['avatar']
                    )
                    embed.add_field(
                        name=f'{settings["prefix"]}card `<–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á>`',
                        value='–í–∏–≤–æ–¥–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ä—ñ–≤–µ–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞',
                        inline=False
                    )
                    
                    await interaction.response.send_message(embed=embed, ephemeral=True)
                
            menu.callback = callback
            view = View()
            view.add_item(menu)
            
            embed=discord.Embed(
                title='–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:',
                description=f'–í–∏ –º–æ–∂–µ—Ç–µ –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –¥–ª—è –∫–æ–∂–Ω–æ—ó –∫–æ–º–∞–Ω–¥–∏, –≤–∏–∫–ª–∏–∫–∞–≤—à–∏ —ó—ó –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é {settings["prefix"]}help `<–Ω–∞–∑–≤–∞ –∫–æ–º–∞–Ω–¥–∏>`',
                color=settings['color']
                )
            embed.set_thumbnail(url=settings['avatar'])
            embed.set_footer(
                text='Mops Storage ¬© 2020-2022 –í—Å—ñ –ø—Ä–∞–≤–∞ –∑–∞—Ö–∏—â–µ–Ω–æ ‚Ä¢ https://mops-storage.xyz',
                icon_url=settings['avatar']
                )
            embed.add_field(
                name=f'üìÉInformation ({settings["prefix"]}help information)',
                value=f'`{settings["prefix"]}help` `{settings["prefix"]}info` `{settings["prefix"]}stats` `{settings["prefix"]}server` `{settings["prefix"]}user`',
                inline=False
                )
            embed.add_field(
                name=f'üí∞–ï–∫–æ–Ω–æ–º—ñ–∫–∞ ({settings["prefix"]}help economy)',
                value=f'`{settings["prefix"]}card` `{settings["prefix"]}set_xp` `{settings["prefix"]}set_lvl`',
                inline=False
                )
            
            await interaction.response.send_message(embed=embed, view=view, ephemeral=True)
        elif command == 'help':
            embed = discord.Embed(
                title='–ü–µ—Ä–µ–ª—ñ–∫ –≤—Å—ñ—Ö –∫–æ–º–∞–Ω–¥ —Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π',
                description='–ü–æ–∫–∞–∑—É—î –≤—Å—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ —Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –±–æ—Ç–∞',
                color=settings['color']
            )
            
            embed.set_author(
                name=f'–ö–æ–º–∞–Ω–¥–∞ "{settings["prefix"]}help"'
            )
            embed.add_field(
                name='–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è',
                value=f'{settings["prefix"]}help `<–Ω–∞–∑–≤–∞ –∫–æ–º–∞–Ω–¥–∏ —á–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó>`',
                inline=False
            )
            embed.add_field(
                name='–ü—Ä–∏–∫–ª–∞–¥ 1',
                value=f'{settings["prefix"]}help\n‚îó–ü–æ–∫–∞–∑—É—î –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥',
                inline=False
            )
            embed.add_field(
                name='–ü—Ä–∏–∫–ª–∞–¥ 2',
                value=f'{settings["prefix"]}help information\n‚îó–ü–æ–∫–∞–∑—É—î –≤—Å—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó **üìÉ–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è**',
                inline=False
            )
            embed.add_field(
                name='–ü—Ä–∏–∫–ª–∞–¥ 3',
                value=f'{settings["prefix"]}help help\n‚îó–ü–æ–∫–∞–∑—É—î –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ–º–∞–Ω–¥—É **{settings["prefix"]}help** (!–í–∏ –∑–∞—Ä–∞–∑ –ø–µ—Ä–µ–≥–ª—è–¥–∞—î—Ç–µ —ó—ó!)'
            )
            
            embed.set_thumbnail(url=settings['avatar'])
            embed.set_footer(
                text='Mops Storage ¬© 2020-2022 –í—Å—ñ –ø—Ä–∞–≤–∞ –∑–∞—Ö–∏—â–µ–Ω–æ ‚Ä¢ https://mops-storage.xyz',
                icon_url=settings['avatar']
            )
            
            await interaction.response.send_message(embed=embed, ephemeral=True)
        elif command == 'info':
            embed = discord.Embed(
                title=f'–ö–æ—Ä–∏—Å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ {settings["name"]}',
                description=f'–ü–æ–∫–∞–∑—É—î –∫–æ—Ä–∏—Å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ {settings["name"]} (–≤–µ—Ä—Å—ñ—è, –∞–≤—Ç–æ—Ä, –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ä–µ—Å—É—Ä—Å–∏ —ñ —Ç.–¥.)',
                color=settings['color']
            )
            
            embed.set_author(
                name=f'–ö–æ–º–∞–Ω–¥–∞ "{settings["prefix"]}info"'
            )
            embed.add_field(
                name='–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è',
                value=f'{settings["prefix"]}info',
                inline=False
            )
            
            embed.set_thumbnail(url=settings['avatar'])
            embed.set_footer(
                text='Mops Storage ¬© 2020-2022 –í—Å—ñ –ø—Ä–∞–≤–∞ –∑–∞—Ö–∏—â–µ–Ω–æ ‚Ä¢ https://mops-storage.xyz',
                icon_url=settings['avatar']
            )
            
            await interaction.response.send_message(embed=embed, ephemeral=True)
        elif command == 'stats':
            embed = discord.Embed(
                title=f'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è {settings["name"]}',
                description=f'–ü–æ–∫–∞–∑—É—î –∑–∞–≥–∞–ª—å–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É {settings["name"]}, —Ç–∞–∫—É —è–∫: –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä—ñ–≤, —É—á–∞—Å–Ω–∏–∫—ñ–≤ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∏—Ö –∫–æ–º–∞–Ω–¥ —ñ —Ç.–¥',
                color=settings['color']
            )
            
            embed.set_author(
                name=f'–ö–æ–º–∞–Ω–¥–∞ "{settings["prefix"]}stats"'
            )
            embed.add_field(
                name='–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è',
                value=f'{settings["prefix"]}stats',
                inline=False
            )
            
            embed.set_thumbnail(url=settings['avatar'])
            embed.set_footer(
                text='Mops Storage ¬© 2020-2022 –í—Å—ñ –ø—Ä–∞–≤–∞ –∑–∞—Ö–∏—â–µ–Ω–æ ‚Ä¢ https://mops-storage.xyz',
                icon_url=settings['avatar']
            )
            
            await interaction.response.send_message(embed=embed, ephemeral=True)
        else:
            await interaction.response.send_message(embed=discord.Embed(title='–ü–æ–º–∏–ª–∫–∞', description=f'–¢–∞–∫–æ—ó –∫–æ–º–∞–Ω–¥–∏ —á–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –Ω–µ–º–∞—î!\n–ü–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ –∫–æ–º–∞–Ω–¥–∏ –∑–∞ –¥–æ–ø–æ–º–≥–æ—é: {settings["prefix"]}help', color=0xff0000), ephemeral=True)
    
    @help.autocomplete("command")
    async def help_autocomplete(self, interaction: discord.Interaction, current: str) -> typing.List[app_commands.Choice[str]]:
        data = []
        for command_choice in ['help', 'info', 'stats']:
            if current.lower() in command_choice.lower():
                data.append(app_commands.Choice(name=command_choice, value=command_choice))
        return data    
    
    @app_commands.command(name='info', description=f'–ö–æ—Ä–∏—Å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ {settings["name"]}')
    async def info_(self, interaction: discord.Interaction):
        for row in cur.execute(f'SELECT commands FROM stats_bot'):
            StBcommands = row[0]
        embed = discord.Embed(
            title=settings['name'],
            description=f'–ü—Ä–∏–≤—ñ—Ç, —è “ê–∞–Ω—å—é —Å–µ–∫—Ä–µ—Ç–∞—Ä–∫–∞ –¶—ñ—Å—ñ–Ω –≤ –õ—ñ—é–µ. –ú–æ—î –∑–∞–≤–¥–∞–Ω–Ω—è –¥–æ–ø–æ–º–∞–≥–∞—Ç–∏ –º–∞–Ω–¥—Ä—ñ–≤–Ω–∏–∫–∞–º –æ—Å–≤–æ—é–≤–∞—Ç–∏—Å—è –∑ –¥–∏–≤–æ–≤–∏–∂–Ω–∏–º —Å–≤—ñ—Ç–æ–º –¢–µ–π–≤–∞—Ç\n\n–ú—ñ–π –ø—Ä–µ—Ñ—ñ–∫—Å `{settings["prefix"]}`. –Ø–∫—â–æ —Ç–∏ —Ö–æ—á–µ—à –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –≤—Å—ñ –º–æ—ó –∫–æ–º–∞–Ω–¥–∏ —Ç–æ–¥—ñ –º–æ–∂–µ—à —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—è **{settings["prefix"]}help**. –ê–±–æ —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Å—è **{settings["prefix"]}starjour**, —â–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏ —Å–≤–æ—é –ø–æ–¥–æ—Ä–æ–∂<a:ganyuroll:1037043774850867241>\n{interaction.expires_at}',
            color=settings['color']
        )
        
        embed.set_thumbnail(url=settings['avatar'])
        embed.set_footer(
            text='Mops Storage ¬© 2020-2022 –í—Å—ñ –ø—Ä–∞–≤–∞ –∑–∞—Ö–∏—â–µ–Ω–æ ‚Ä¢ https://mops-storage.xyz',
            icon_url=settings['avatar']
        )
        
        embed.add_field(
            name='–ó–±—ñ—Ä–∫–∞:',
            value=f'{settings["version"]} (<t:1666194420:d>)'
        )
        embed.add_field(
            name='–ú—ñ–π —Ä–æ–∑—Ä–æ–±–Ω–∏–∫:',
            value='<:dev:1037048854190772295> [Indi Mops#0424](https://discord.com/users/734082410504781854)'
        )
        embed.add_field(
            name='‚†Ä',
            value='‚†Ä'
        )
        embed.add_field(
            name='–ö–æ—Ä–∏—Å–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:',
            value=f'[–í–µ–±-—Å–∞–π—Ç]({settings["site"]})\n[–°–µ—Ä–≤–µ—Ä –ø—ñ–¥—Ç—Ä–∏–º–∫–∏]({settings["support_server"]})'
        )
        embed.add_field(
            name='‚†Ä',
            value=f'[GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π]({settings["github_repo"]})\n[top.gg]({settings["top.gg"]})'
        )
        embed.add_field(
            name='‚†Ä',
            value=f'[Patreon]({settings["patreon"]})\n[Diaka]({settings["diaka"]})'
        )
        
        await interaction.response.send_message(embed=embed, ephemeral=True)
        cur.execute(f'UPDATE stats_bot SET commands = {StBcommands + 1} ')
        data.commit()
    
    @app_commands.command(name='stats', description=f'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {settings["name"]}')
    async def stats_(self, interaction: discord.Interaction):
        """–ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ –ø—Ä–∞—Ü—é—î Cog —Å–∏—Å—Ç–µ–º–∞"""
        ctx = await self.bot.get_context(interaction)
        ping = self.bot.latency
        for row in cur.execute(f'SELECT guilds, users, channels, commands FROM stats_bot'):
            StBguilds = row[0]
            StBusers = row[1]
            StBchannels = row[2]
            StBcommands = row[3]
          
        embed = discord.Embed(
            title=f'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {settings["name"]}',
            color=settings['color']
            )
        embed.set_thumbnail(url=settings['avatar'])
        embed.set_footer(
            text='Mops Storage ¬© 2020-2022 –í—Å—ñ –ø—Ä–∞–≤–∞ –∑–∞—Ö–∏—â–µ–Ω–æ ‚Ä¢ https://mops-storage.xyz',
            icon_url=settings['avatar']
        )
        
        embed.add_field(
            name='–û—Å–Ω–æ–≤–Ω–∞',
            value=f'–°–µ—Ä–≤–µ—Ä–∏: {"{0:,}".format(StBguilds).replace(",", " ")}\n–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {"{0:,}".format(StBusers).replace(",", " ")}\n–ö–∞–Ω–∞–ª—ñ–≤: {"{0:,}".format(StBchannels).replace(",", " ")}'
        )
        embed.add_field( 
            name='–ü–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–∞',
            value=f'–ö–æ–º–∞–Ω–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ: {"{0:,}".format(StBcommands + 1).replace(",", " ")}\n–ó–∞—Ç—Ä–∏–º–∫–∞: {round(ping, 2)} –º—Å.\n–ó–∞–ø—É—â–µ–Ω–∏–π: <t:{start_time}:R>'
        )
        
        await interaction.response.send_message(embed=embed, ephemeral=True)
        cur.execute(f'UPDATE stats_bot SET commands = {StBcommands + 1} ')
        data.commit()
    
    @app_commands.command(name='server', description='–î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å–µ—Ä–≤–µ—Ä')
    async def server_(self, interaction: discord.Interaction):
        for row in cur.execute(f'SELECT commands FROM stats_bot'):
            StBcommands = row[0]
        
        ctx = await self.bot.get_context(interaction)
        text_channels = len(ctx.guild.text_channels)
        voice_channels = len(ctx.guild.voice_channels)
        stage_channels = len(ctx.guild.stage_channels)
        total_channels = text_channels + voice_channels + stage_channels
        
        total = len(ctx.guild.members)
        online = len(list(filter(lambda m: str(m.status) == "online", ctx.guild.members)))
        idle = len(list(filter(lambda m: str(m.status) == "idle", ctx.guild.members)))
        dnd = len(list(filter(lambda m: str(m.status) == "dnd", ctx.guild.members)))
        offline = len(list(filter(lambda m: str(m.status) == "offline", ctx.guild.members)))
        humans = len(list(filter(lambda m: not m.bot, ctx.guild.members)))
        bots = len(list(filter(lambda m: m.bot, ctx.guild.members)))
        
        snsfwlvl = str(ctx.guild.explicit_content_filter)
        if snsfwlvl == "all_members":
            snsfwlvl = "–ü–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ –∫–æ–∂–Ω–æ–≥–æ —É—á–∞—Å–Ω–∏–∫–∞"
        elif snsfwlvl == "no_role":
            snsfwlvl = "–ü–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ —É—á–∞—Å–Ω–∏–∫—ñ–≤ –±–µ–∑ —Ä–æ–ª–µ–π"
        elif snsfwlvl == "disabled":
            snsfwlvl = "–ù–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
        else:
            snsfwlvl = "–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
        
        embed = discord.Embed(
            color = settings['color'],
            title = f"–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å–µ—Ä–≤–µ—Ä {ctx.guild.name}"
        )
        
        schannel_rules = str(ctx.guild.rules_channel)
        if schannel_rules == "None":
            schannel_rules = "–ù–µ–º–∞—î"
        else:
            schannel_rules = f"<#{ctx.guild.rules_channel.id}>"
        
        sverification = str(ctx.guild.verification_level)
        if sverification == "extreme":
            sverification = "–ù–∞–π–≤–∏—â–∏–π"
        elif sverification == "high":
            sverification = "–í–∏—Å–æ–∫–∏–π"
        elif sverification == "medium":
            sverification = "–°–µ—Ä–µ–¥–Ω—ñ–π"
        elif sverification == "low":
            sverification = "–ù–∏–∑—å–∫–∏–π"
        elif sverification == "none":
            sverification = "–ù–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π"
        else:
            sverification = "–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
        
        created_at = ctx.guild.created_at
        embed.add_field(
            name = "–í–ª–∞—Å–Ω–∏–∫ —Å–µ—Ä–≤–µ—Ä–∞", 
            value = ctx.guild.owner.mention,
            inline = True
            )
        embed.add_field(
            name = "Id", 
            value = ctx.guild.id, 
            inline = True
            )
        embed.add_field(
            name = "–°—Ç–≤–æ—Ä–µ–Ω–∏–π: ", 
            value = f'<t:{int(created_at.timestamp())}:f>', 
            inline = True
            )
        embed.add_field(
            name = "–ö–∞–Ω–∞–ª –∑ –ø—Ä–∞–≤–∏–ª–∞–º–∏:",
            value = schannel_rules,
            inline = True)
        embed.add_field(
            name = "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞:", 
            value = snsfwlvl,
            inline = True
            )
        embed.add_field(
            name = "–†—ñ–≤–µ–Ω—å –º–æ–¥–µ—Ä–∞—Ü—ñ—ó:",
            value = sverification,
            inline = True)
        embed.add_field(
            name = "–£—á–∞—Å–Ω–∏–∫–∏:", 
            value = f'<:total_members:1038376493669154836> –í—Å—å–æ–≥–æ: **{total}**\n<:members:1038376476870979594> –£—á–∞—Å–Ω–∏–∫—ñ–≤: **{humans}**\n<:bots:1038376472521482263> –ë–æ—Ç—ñ–≤: **{bots}**',
            inline = True
            )
        embed.add_field(
            name = "–°—Ç–∞—Ç—É—Å–∏:", 
            value = f"<:online:1038376483758030898>–û–Ω–ª–∞–π–Ω: **{online}**\n<:idle:1038376474958381056>–í—ñ–¥—ñ–π—à–ª–∏: **{idle}**\n<:ofline:1038376481774120970>–ù–µ –≤ –º–µ—Ä–µ–∂—ñ: **{offline}**", 
            inline = True
            )
        embed.add_field(
            name = "–ö–∞–Ω–∞–ª–∏:", 
            value = f"<:total_channels:1038376491576205375> –í—Å—å–æ–≥–æ: **{total_channels}**\n<:text_channels:1038376489399357504> –¢–µ–∫—Å—Ç–æ–≤—ñ: **{text_channels}**\n<:voice_channels:1038376495414001724> –ì–æ–ª–æ—Å–æ–≤—ñ: **{voice_channels}**"
            )
        
        embed.set_thumbnail(url = ctx.guild.icon)
        
        await interaction.response.send_message(embed=embed, ephemeral=True)
        cur.execute(f'UPDATE stats_bot SET commands = {StBcommands + 1} ')
        data.commit()

    @app_commands.command(name='user', description=f'–î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
    async def user_(self, interaction: discord.Interaction, user: discord.Member = None):
        for row in cur.execute(f'SELECT commands FROM stats_bot'):
            StBcommands = row[0]
        
        ctx = await self.bot.get_context(interaction)
        
        if user is None:
            user = ctx.author
            
        for bio in cur.execute(f'SELECT bio FROM users WHERE id = {user.id}'):
            if bio[0] == 'None':
                bio = f"–í–∏ –º–æ–∂–µ—Ç–µ –¥–æ–¥–∞—Ç–∏ —Å—é–¥–∏ —è–∫—É—Å—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Å–µ–±–µ. –°–∫–æ—Ä–∏—Å—Ç–∞–≤—à–∏—Å—å `{settings['prefix']}bio`"
        headers = {"Authorization": f"Bot {settings['token']}"}
        req = requests.get(f"https://discord.com/api/v9/users/{user.id}", headers=headers).json()
        
        def rgb(hex):
            rgb = []
            for i in (0, 2, 4):
                decimal = int(hex[i:i+2], 16)
                rgb.append(decimal)
            return rgb
        
        if req['banner_color'] is None:
            embed = discord.Embed(description=bio, color=settings['color'])
        else:
            embed = discord.Embed(description=bio, color=discord.Color.from_rgb(rgb(req['banner_color'].replace('#', ''))[0], rgb(req['banner_color'].replace('#', ''))[1], rgb(req['banner_color'].replace('#', ''))[2]))
        
        #global user_status
        user_status = interaction.guild.get_member(user.id).status
        if user_status == discord.Status.online:
            user_status = "<:online:1038376483758030898>–í –º–µ—Ä–µ–∂—ñ"
        elif user_status == discord.Status.offline or user_status == discord.Status.invisible:
            user_status = "<:ofline:1038376481774120970>–ù–µ –≤ –º–µ—Ä–µ–∂—ñ"
        elif user_status == discord.Status.idle:
            user_status = "<:idle:1038376474958381056>–í—ñ–¥—ñ–π—à–æ–≤"
        elif user_status == discord.Status.dnd or user_status == discord.Status.do_not_disturb:
            user_status = "<:dnd:1048546187487227914>–ù–µ —Ç—É—Ä–±—É–≤–∞—Ç–∏"

        
        print(interaction.guild.get_member(user.id).activities)
        global ca, spotify, game
        ca = ''
        spotify = ''
        game = ''
        for active in interaction.guild.get_member(user.id).activities:
            if isinstance(active, discord.CustomActivity):
                global ca_emoji_type, ca_emoji_id
                ca_emoji_type = ''
                ca_emoji_id = ''
                if active.emoji is None: # Checks whether the user status is emoji
                    pass
                else:
                    if active.emoji.animated is True: # Checks whether emoji is animated
                        ca_emoji_type = 'a'
                    ca_emoji_name = active.emoji.name
                    ca_emoji_id = active.emoji.id
                ca_name = active.name
                global ca_emoji
                ca_emoji = None
                if self.bot.get_emoji(ca_emoji_id) == None:# Can a bot to reflect that emoji
                    ca_emoji = ''
                else:
                    ca_emoji =  f'<{ca_emoji_type}:{ca_emoji_name}:{ca_emoji_id}>'

                if ca_name is None:
                    if self.bot.get_emoji(ca_emoji_id) == None:
                        ca = ''
                    else:
                        ca = f'**–ö–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–∏–π —Å—Ç–∞—Ç—É—Å**: {ca_emoji}\n'
                else:
                    ca = f'**–ö–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–∏–π —Å—Ç–∞—Ç—É—Å:** {ca_emoji}{ca_name}\n'

            if isinstance(active, discord.Spotify):
                print(active.title)
                print(active.artist)
                artist = active.artist
                if len(artist.split('; ')) > 1:
                    artist = artist.split('; ')
                    artist = ", ".join(artist)
                else:
                    artist = f'[{active.artist}](https://open.spotify.com/search/{active.artist})'
                        
                spotify = f'**–°–ª—É—Ö–∞—î:** <:spotify:1049105195906379837> [{active.title}](https://open.spotify.com/track/{active.track_id}) - {artist}\n'
            
            if isinstance(active, discord.Game):
                game = f'**–ì—Ä–∞—î –≤:** {active.name}\n'
          
        embed.add_field(
            name='–û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è',
            value=f'**–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:** {user.name}#{user.discriminator}\n**–°—Ç–∞—Ç—É—Å:** {user_status}\n{ca}{spotify}{game}**–ü—Ä–∏—î–¥–Ω–∞–≤–≤—Å—è:** <t:{int(user.joined_at.timestamp())}:D> (<t:{int(user.joined_at.timestamp())}:R>)\n**–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞–≤—Å—è:** <t:{int(user.created_at.timestamp())}:D> (<t:{int(user.created_at.timestamp())}:R>)'
        )
        
        embed.set_author(
            name=f'–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ {user.name}',
            icon_url=user.avatar
        )
        
        embed.set_thumbnail(
            url=user.avatar
        )
        
        if req['banner'] is None:
            pass
        else:
            embed.set_image(
            url=f'https://cdn.discordapp.com/banners/{user.id}/{req["banner"]}?size=2048'
        )
        
        embed.set_footer(
            text=f'ID: {user.id}'
        )
        
        await interaction.response.send_message(embed=embed, ephemeral=True)
        cur.execute(f'UPDATE stats_bot SET commands = {StBcommands + 1} ')
        data.commit()  

    async def user_info_callback(self, interaction: discord.Interaction, user: discord.User):
        for row in cur.execute(f'SELECT commands FROM stats_bot'):
            StBcommands = row[0]
        
        ctx = await self.bot.get_context(interaction)
        for bio in cur.execute(f'SELECT bio FROM users WHERE id = {user.id}'):
            if bio[0] == 'None':
                bio = f"–í–∏ –º–æ–∂–µ—Ç–µ –¥–æ–¥–∞—Ç–∏ —Å—é–¥–∏ —è–∫—É—Å—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Å–µ–±–µ. –°–∫–æ—Ä–∏—Å—Ç–∞–≤—à–∏—Å—å `{settings['prefix']}bio`"
        headers = {"Authorization": f"Bot {settings['token']}"}
        req = requests.get(f"https://discord.com/api/v9/users/{user.id}", headers=headers).json()
        
        def rgb(hex):
            rgb = []
            for i in (0, 2, 4):
                decimal = int(hex[i:i+2], 16)
                rgb.append(decimal)
            return rgb
        
        if req['banner_color'] is None:
            embed = discord.Embed(title=f'–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ {user.name}', description=bio, color=settings['color'])
        else:
            embed = discord.Embed(title=f'–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ {user.name}', description=bio, color=discord.Color.from_rgb(rgb(req['banner_color'].replace('#', ''))[0], rgb(req['banner_color'].replace('#', ''))[1], rgb(req['banner_color'].replace('#', ''))[2]))
        
        await interaction.response.send_message(embed=embed, ephemeral=True)
        cur.execute(f'UPDATE stats_bot SET commands = {StBcommands + 1} ')
        data.commit()

async def setup(bot):
    await bot.add_cog(Information(bot))