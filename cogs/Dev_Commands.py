# -*- coding: utf-8 -*-
import discord
import discord
from discord.ext import commands, tasks
from discord.ui import Select, View, Button
from discord import app_commands
import config
from config import settings
import sqlite3

data = sqlite3.connect('data.sqlite')#connect to BD
cur = data.cursor()

class Test_Commands(commands.Cog, name='–ö–æ–º–∞–Ω–¥–∏ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞'):
    """–ö–æ–º–∞–Ω–¥–∏ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ä—ñ–∑–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π, –ø–æ–¥—ñ–π —ñ —Ç.–¥.
    
    –í–∏–æ–∫—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –ª–∏—à–∞ –¥–ª—è —Ç–µ—Å—Ç—É —ñ –Ω–µ –±—ñ–ª—å—à–µ!
    """
    def __init__(self, bot: commands.Bot):
        self.bot = bot
    
    @commands.Cog.listener()
    async def on_ready(self):
        print('Test commands - Ready!')# –í–∏–≤–æ–¥–∏—Ç—å, –∫–æ–ª–∏ –≥–≤–∏–Ω—Ç–∏–∫ –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏
    
    @tasks.loop(seconds=10)
    async def sync(self, ctx) -> None:
        fmt = await ctx.bot.tree.sync()
        print(f'Dev_commands: –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ {fmt} —Å–ª–µ—à-–∫–æ–º–∞–Ω–¥')
    
    @commands.command()
    @commands.is_owner()
    async def ping(self, ctx):
        """–ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ –ø—Ä–∞—Ü—é—î Cog —Å–∏—Å—Ç–µ–º–∞"""
        ping = self.bot.latency
        guilds = self.bot.guilds
        for guild in guilds:
            print(guild)
            print(f'–ö–∞–Ω–∞–ª–∏: {len(guild.text_channels) + len(guild.voice_channels) + len(ctx.guild.stage_channels)}')
        embed = discord.Embed(
            title=f'–ü—ñ–Ω–≥ - {round(ping, 2)}\n–°–µ—Ä–≤–µ—Ä–∏: {len(guilds)}\n–£—á—á–∞—Å–Ω–∏–∫–∏: {len(self.bot.users)}'
        )
        await ctx.send(embed=embed)  

    @commands.command()
    @commands.is_owner()
    async def create_invite(self, ctx, server_id: int):
        guild = self.bot.get_guild(server_id)
        invite = await guild.text_channels[0].create_invite(max_age=0, max_uses=0, temporary=False)
        await ctx.send(invite)

    @commands.command()
    @commands.is_owner()
    async def button(self, ctx):
        button = Button(
            label='Url',
            style=discord.ButtonStyle.url,
            url='https://mops-storage.xyz'
        )
        button1 = Button(
            label='Button',
            style=discord.ButtonStyle.primary
        )
        
        async def button_call_back(interaction:discord.Integration):
            await interaction.response.send_message(embed=discord.Embed(title='Hello', color=config.settings['color']), ephemeral=True)
        
        button1.callback = button_call_back
        
        view = View()
        view.add_item(button)
        view.add_item(button1)
        
        await ctx.send(view=view)
    
    @commands.command()
    @commands.is_owner()
    async def sync(self, ctx) -> None:
        fmt = await ctx.bot.tree.sync()
        await ctx.send(f'Synced {len(fmt)} commands')
        
    @sync.error
    async def sync_error(self, ctx, error):
        if isinstance(error, commands.NotOwner):
            embed = discord.Embed(
                title='–ü–æ–º–∏–ª–∫–∞',
                description='–í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ü—é –∫–æ–º–∞–Ω–¥—É!',
                color=0xff0000
            )
            await ctx.reply(embed=embed)
    
    @app_commands.command(name='slash', description='This test slash command')
    async def slash(self, interaction:discord.Integration, arg: str):
        await interaction.response.send_message(content='Command work', ephemeral=True)
    
    @commands.command()
    @commands.is_owner()
    async def select_menu(self, ctx):
        select = Select(
            placeholder='–í–∏–±–µ—Ä–∏ –¥—ñ—é...',
            options=[
                discord.SelectOption(
                    label='Padoru',
                    value='1',
                    emoji='<a:SoraoDev:931927261731516477>',
                    description='–ß–∞—Å –Ω–∞—Å—Ç–∞–≤...'
                    ),
                discord.SelectOption(
                    label='–©–æ?',
                    value='2',
                    emoji='<a:SoraSquints:931922199403696188>',
                    description='–°–æ—Ä–æ–≤–∞ –º—Ä—É–∂–∏—Ç—å—Å—è'
                    ),
                discord.SelectOption(
                    label='–•–µ-—Ö–µ, –Ω–µ —Ö–µ-—Ö–µ',
                    value='3',
                    emoji='<a:HuTaoRock:1030925213522727122>',
                    description='–•—É –¢–∞–æ-–°–∫–∞–ª–∞'
                    )
                ]
            )
        
        async def my_callback(interaction:discord.Interaction):
            if select.values[0] == '1':
                await interaction.response.send_message(f'–¢–∏ –≤–∏–±—Ä–∞–≤ {select.values[0]}')
                await ctx.send(select.values[0])
            if select.values[0] == '2':
                await interaction.response.send_message(f'–¢–∏ –≤–∏–±—Ä–∞–≤ {select.values[0]}')
            if select.values[0] == '3':
                await interaction.response.edit_message(content=f'–¢–∏ –≤–∏–±—Ä–∞–≤ {select.values[0]}')
        
        select.callback = my_callback
        view = View()
        view.add_item(select)
    
        await ctx.defer(ephemeral=True)
        await ctx.send('Menu', view=view)
    """
    @commands.command(name='information')
    async def information(self, ctx):
        for row in cur.execute(f'SELECT commands FROM stats_bot'):
            StBcommands = row[0]
        
        embed = discord.Embed(
                    title='–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó üìÉ–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è',
                    description=f'–í–∏ –º–æ–∂–µ—Ç–µ –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –¥–ª—è –∫–æ–∂–Ω–æ—ó –∫–æ–º–∞–Ω–¥–∏, –≤–∏–∫–ª–∏–∫–∞–≤—à–∏ —ó—ó –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é {settings["prefix"]}help `<–Ω–∞–∑–≤–∞ –∫–æ–º–∞–Ω–¥–∏>`',
                    color=settings['color']
                )
        embed.set_thumbnail(
            url=settings['avatar']
        )
        embed.set_footer(
            text='Mops Storage ¬© 2020-2022 –í—Å—ñ –ø—Ä–∞–≤–∞ –∑–∞—Ö–∏—â–µ–Ω–æ ‚Ä¢ https://mops-storage.xyz',
            icon_url=settings['avatar']
        )
        embed.add_field(
            name=f'{settings["prefix"]}help',
            value='–°–ø–∏—Å–æ–∫ –≤—Å—ñ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–æ–º–∞–Ω–¥ —Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π',
            inline=False
        )
        embed.add_field(
            name=f'{settings["prefix"]}info',
            value=f'–ö–æ—Ä–∏—Å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ {settings["name"]}',
            inline=False
        )
        embed.add_field(
            name=f'{settings["prefix"]}stats',
            value=f'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è {settings["name"]}',
            inline=False
        )
        embed.add_field(
            name=f'{settings["prefix"]}server',
            value='–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ—Ç–æ—á–Ω–∏–π —Å–µ—Ä–≤–µ—Ä',
            inline=False
        )
        embed.add_field(
            name=f'{settings["prefix"]}user',
            value='–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —É—á–∞—Å–Ω–∏–∫–∞',
            inline=False
        )
        
        await ctx.reply(embed=embed)
        cur.execute(f'UPDATE stats_bot SET commands = {StBcommands + 1} ')
        data.commit()
    """

    @app_commands.command(name='kick', description='–¢–µ—Å—Ç –ø–∞—Ä–º–µ—Ç—Ä—ñ–≤')
    async def kick_(self, interaction: discord.Interaction, user: discord.Member, channel: discord.TextChannel, reason: str = None):
        #ctx = await self.bot.get_context(interaction)
        
        await interaction.response.send_message(content=f'–í–∏–≥–Ω–∞—Ç–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {channel} {user.name} –∑–∞ –ø—Ä–∏—á–∏–Ω–æ—é:\n`{reason}`')

# Error callback
    @sync.error
    async def sync_error(self, ctx, error):
        if isinstance(error, commands.NotOwner):
            embed = discord.Embed(
                title='–ü–æ–º–∏–ª–∫–∞',
                description='–í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ü—é –∫–æ–º–∞–Ω–¥—É!',
                color=0xff0000
            )
            await ctx.reply(embed=embed)

    @ping.error
    async def ping_error(self, ctx, error):
        if isinstance(error, commands.NotOwner):
            embed = discord.Embed(
                title='–ü–æ–º–∏–ª–∫–∞',
                description='–í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ü—é –∫–æ–º–∞–Ω–¥—É!',
                color=0xff0000
            )
            await ctx.reply(embed=embed)
     
    @create_invite.error
    async def create_invite_error(self, ctx, error):
        if isinstance(error, commands.NotOwner):
            embed = discord.Embed(
                title='–ü–æ–º–∏–ª–∫–∞',
                description='–í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ü—é –∫–æ–º–∞–Ω–¥—É!',
                color=0xff0000
            )
            await ctx.reply(embed=embed)
      
    @button.error
    async def button_error(self, ctx, error):
        if isinstance(error, commands.NotOwner):
            embed = discord.Embed(
                title='–ü–æ–º–∏–ª–∫–∞',
                description='–í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ü—é –∫–æ–º–∞–Ω–¥—É!',
                color=0xff0000
            )
            await ctx.reply(embed=embed)
    
    @select_menu.error
    async def select_menu_error(self, ctx, error):
        if isinstance(error, commands.NotOwner):
            embed = discord.Embed(
                title='–ü–æ–º–∏–ª–∫–∞',
                description='–í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ü—é –∫–æ–º–∞–Ω–¥—É!',
                color=0xff0000
            )
            await ctx.reply(embed=embed)
    
    
async def setup(bot):
    await bot.add_cog(Test_Commands(bot))